PROGRAM VECTORDIS
IMPLICIT NONE

DOUBLE PRECISION, DIMENSION(:), ALLOCATABLE :: V,P,Q,PQ
DOUBLE PRECISION :: V_X,V_Y,V_Z,DOTRESULT,MAGNITUDE=0,DIST
DOUBLE PRECISION :: P_X,P_Y,P_Z
!INTEGERS FOR DO INDEXING and TO STORE THE DIMENSION
!(D)- SOMETHING THAT CAN BE ASSIGNED FOR MORE MODULAR PROGRAM
INTEGER :: I,D=3

!******************************************************************************!
!Explicit Interface- Requirement for passing allocatable argument as safe gaurd!
INTERFACE
SUBROUTINE FIND_PQ (P,Q,PQ,D)
!SET UP VALUES FOR THE RETURN ARRAY- NOT A REF TO OUTSIDE FUNCTION- INTENT NOT NEEDED
DOUBLE PRECISION, DIMENSION(:), ALLOCATABLE :: P,Q,PQ
INTEGER::I,D
END SUBROUTINE FIND_PQ
END INTERFACE
!*******************************************************************************!

!******************************************************************************!
!Explicit Interface- Requirement for passing allocatable argument as safe gaurd!
INTERFACE
SUBROUTINE DOTPROD (PQ,V,DOTRESULT,D)
IMPLICIT NONE
!SET UP VALUES FOR THE RETURN ARRAY
DOUBLE PRECISION, DIMENSION(:), ALLOCATABLE :: V,PQ
DOUBLE PRECISION :: DOTRESULT
INTEGER::I,D
END SUBROUTINE DOTPROD 
END INTERFACE
!*******************************************************************************!

!******************************************************************************!
!Explicit Interface- Requirement for passing allocatable argument as safe gaurd!
INTERFACE
SUBROUTINE MAGV (V,MAGNITUDE,D)
IMPLICIT NONE
!SET UP VALUES FOR THE RETURN ARRAY
DOUBLE PRECISION, DIMENSION(:), ALLOCATABLE :: V
DOUBLE PRECISION :: MAGNITUDE
INTEGER::I,D
END SUBROUTINE MAGV 
END INTERFACE
!*******************************************************************************!


!PRINT*,"ENTER THE DIMENSIONS OF THE ARRAYS: "
!READ*,D

!BEGIN INPUT FOR PLANE, SPECIFY 3-D,READ VALS, INPUT TO V
PRINT*,"INPUT PLANE VECTOR:" ,D ,"-D" 
READ*,V_X,V_Y,V_Z
allocate(V(D))
V(1)=V_X
V(2)=V_Y
V(3)=V_Z

!POINT Q ON PLANE X=1,Y=0,Z=0
ALLOCATE(Q(D))
Q(1) = V(1)
Q(2) = 0
Q(3) = 0

!BEGIN INPUT FOR THE POINT P(X,Y,Z)
PRINT*,"INPUT THE POINT" ,D ,"-D"
READ*,P_X,P_Y,P_Z
allocate(P(D))
P(1)=P_X
P(2)=P_Y
P(3)=P_Z

!ALLOCATE FOR THE RETURN ARRAY PQ
ALLOCATE(PQ(D))
!IF STATEMENT USED TO ENSURE THE ARRAYS ARE ALLOCATED
IF(ALLOCATED(PQ).AND.ALLOCATED(P).AND.ALLOCATED(Q)) THEN
CALL FIND_PQ(P,Q,PQ,D)
ENDIF

!ALLOCATE FOR THE RETURN ARRAY DOTRESULT
!IF STATEMENT USED TO ENSURE THE ARRAYS ARE ALLOCATED
IF(ALLOCATED(PQ).AND.ALLOCATED(V)) THEN
CALL DOTPROD (PQ,V,DOTRESULT,D)
ENDIF

!ALLOCATE FOR THE RETURN ARRAY DOTRESULT
!IF STATEMENT USED TO ENSURE THE ARRAYS ARE ALLOCATED
IF(ALLOCATED(V)) THEN
CALL MAGV (V,MAGNITUDE,D)
ENDIF

!DEFINE DISTANCE
DIST = DOTRESULT/MAGNITUDE

!PRINT THE ELEMENTS
PRINT*,"PLANE VECTOR:"
PRINT*,V(1),V(2),V(3)
PRINT*,"POINT:"
PRINT*,P(1),P(2),P(3)
PRINT*,"VECTOR PQ:"
PRINT*,PQ(1),PQ(2),PQ(3)
PRINT*,"DOTPRODUCT:",DOTRESULT
PRINT*,"MAGNITUDE:",MAGNITUDE
PRINT*,"DISTANCE:",DIST
!DEALLOCATION PROCESS
DEALLOCATE(V,P,Q,PQ)
END Program VECTORDIS


!FIND THE LINE PQ
SUBROUTINE FIND_PQ (P,Q,PQ,D)
IMPLICIT NONE
!SET UP VALUES FOR THE RETURN ARRAY
DOUBLE PRECISION, DIMENSION(:), ALLOCATABLE :: P,Q,PQ
INTEGER::I,D

!IF STATEMENT USED TO ENSURE THE ARRAYS ARE ALLOCATED
	IF(ALLOCATED(PQ).AND.ALLOCATED(P).AND.ALLOCATED(Q)) THEN
		DO I=1,D
			PQ(I) = P(I)-Q(I)
		END DO
	ENDIF
END SUBROUTINE 




!FIND THE MAGNITUDE OF NORMAL VECTOR (AKA V)
SUBROUTINE MAGV (V,MAGNITUDE,D)
IMPLICIT NONE
DOUBLE PRECISION, DIMENSION(:), ALLOCATABLE :: V
DOUBLE PRECISION :: MAGNITUDE
INTEGER::I,D

!IF STATEMENT USED TO ENSURE THE ARRAYS ARE ALLOCATED
	IF(ALLOCATED(V)) THEN
		DO I=1,D
			MAGNITUDE = MAGNITUDE + (V(I)**2)
		END DO
MAGNITUDE = SQRT(MAGNITUDE)
	ENDIF
END SUBROUTINE




!DOT PRODUCT FUNCTION
SUBROUTINE DOTPROD (PQ,V,DOTRESULT,D)
IMPLICIT NONE
!SET UP VALUES FOR THE RETURN ARRAY
DOUBLE PRECISION, DIMENSION(:), ALLOCATABLE :: V,PQ
DOUBLE PRECISION :: DOTRESULT
INTEGER::I,D

!IF STATEMENT USED TO ENSURE THE ARRAYS ARE ALLOCATED
	IF(ALLOCATED(PQ).AND.ALLOCATED(V)) THEN
		DO I=1,D
			DOTRESULT = DOTRESULT + (PQ(I)*V(I))
		END DO
DOTRESULT = ABS(DOTRESULT)
	ENDIF
END SUBROUTINE

